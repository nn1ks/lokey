name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -D warnings
  DEFMT_LOG: trace

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mcu: [no_mcu, nrf52840, rp2040]
        features: ["", "defmt", "usb", "defmt usb", "ble", "defmt ble", "usb ble", "defmt usb ble"]
        include:
          - mcu: no_mcu
            target: thumbv7em-none-eabihf
            mcu_features: ""
          - mcu: nrf52840
            target: thumbv7em-none-eabihf
            mcu_features: "nrf52840"
          - mcu: rp2040
            target: thumbv6m-none-eabi
            mcu_features: "rp2040"
        exclude:
          # If the "nrf52840" feature is enabled, the "ble" feature must also be enabled so we exclude all feature sets that don't have "ble" here
          - mcu: nrf52840
            features: ""
          - mcu: nrf52840
            features: "defmt"
          - mcu: nrf52840
            features: "usb"
          - mcu: nrf52840
            features: "defmt usb"
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose --target ${{ matrix.target }} --no-default-features --features "${{ matrix.features }} ${{ matrix.mcu_features }}"
    - name: Run clippy
      run: cargo clippy --verbose --target ${{ matrix.target }} --no-default-features --features "${{ matrix.features }} ${{ matrix.mcu_features }}" -- -D warnings
    - name: Run tests
      if: matrix.mcu != 'no_mcu'
      run: cargo test --verbose --doc -Zdoctest-xcompile --target ${{ matrix.target }} --no-default-features --features '${{ matrix.features }} ${{ matrix.mcu_features }}'
  examples:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: [keyboard_nrf52840, keyboard_rp2040]
    steps:
      - uses: actions/checkout@v4
      - name: Check formatting
        run: cargo fmt --verbose --check
        working-directory: examples/${{ matrix.example }}
      - name: Build
        run: cargo build --verbose
        working-directory: examples/${{ matrix.example }}
      - name: Run clippy
        run: cargo clippy --verbose
        working-directory: examples/${{ matrix.example }}
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Check formatting
      run: cargo fmt --verbose --check
